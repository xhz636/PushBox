////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Seg7_Dev.vf
// /___/   /\     Timestamp : 01/10/2016 12:46:14
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/PushBox/ipcore_dir -intstyle ise -family spartan3 -verilog E:/PushBox/Seg7_Dev.vf -w E:/PushBox/Seg7_Dev.sch
//Design Name: Seg7_Dev
//Device: spartan3
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4T1_4_MUSER_Seg7_Dev(I0, 
                               I1, 
                               I2, 
                               I3, 
                               s, 
                               o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_36;
   wire XLXN_40;
   wire XLXN_56;
   wire XLXN_57;
   wire XLXN_58;
   
   INV  XLXI_1 (.I(s[0]), 
               .O(XLXN_6));
   INV  XLXI_2 (.I(s[1]), 
               .O(XLXN_7));
   AND2  XLXI_3 (.I0(XLXN_7), 
                .I1(XLXN_6), 
                .O(XLXN_40));
   AND2  XLXI_4 (.I0(XLXN_7), 
                .I1(s[0]), 
                .O(XLXN_56));
   AND2  XLXI_5 (.I0(s[1]), 
                .I1(XLXN_6), 
                .O(XLXN_57));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_58));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_40), 
                .O(XLXN_9));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_56), 
                .O(XLXN_10));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_57), 
                .O(XLXN_11));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_58), 
                 .O(XLXN_12));
   OR4  XLXI_11 (.I0(XLXN_12), 
                .I1(XLXN_11), 
                .I2(XLXN_10), 
                .I3(XLXN_9), 
                .O(o[0]));
   OR4  XLXI_17 (.I0(XLXN_24), 
                .I1(XLXN_26), 
                .I2(XLXN_23), 
                .I3(XLXN_22), 
                .O(o[1]));
   AND2  XLXI_18 (.I0(I0[1]), 
                 .I1(XLXN_40), 
                 .O(XLXN_22));
   AND2  XLXI_19 (.I0(I1[1]), 
                 .I1(XLXN_56), 
                 .O(XLXN_23));
   AND2  XLXI_20 (.I0(I2[1]), 
                 .I1(XLXN_57), 
                 .O(XLXN_26));
   AND2  XLXI_21 (.I0(I3[1]), 
                 .I1(XLXN_58), 
                 .O(XLXN_24));
   OR4  XLXI_22 (.I0(XLXN_29), 
                .I1(XLXN_31), 
                .I2(XLXN_28), 
                .I3(XLXN_27), 
                .O(o[2]));
   AND2  XLXI_23 (.I0(I0[2]), 
                 .I1(XLXN_40), 
                 .O(XLXN_27));
   AND2  XLXI_24 (.I0(I1[2]), 
                 .I1(XLXN_56), 
                 .O(XLXN_28));
   AND2  XLXI_25 (.I0(I2[2]), 
                 .I1(XLXN_57), 
                 .O(XLXN_31));
   AND2  XLXI_26 (.I0(I3[2]), 
                 .I1(XLXN_58), 
                 .O(XLXN_29));
   OR4  XLXI_27 (.I0(XLXN_34), 
                .I1(XLXN_36), 
                .I2(XLXN_33), 
                .I3(XLXN_32), 
                .O(o[3]));
   AND2  XLXI_28 (.I0(I0[3]), 
                 .I1(XLXN_40), 
                 .O(XLXN_32));
   AND2  XLXI_29 (.I0(I1[3]), 
                 .I1(XLXN_56), 
                 .O(XLXN_33));
   AND2  XLXI_30 (.I0(I2[3]), 
                 .I1(XLXN_57), 
                 .O(XLXN_36));
   AND2  XLXI_31 (.I0(I3[3]), 
                 .I1(XLXN_58), 
                 .O(XLXN_34));
endmodule
`timescale 1ns / 1ps

module ScanSync_MUSER_Seg7_Dev(Hexs, 
                               LES, 
                               point, 
                               Scan, 
                               AN, 
                               Hex, 
                               LE, 
                               p);

    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [3:0] Hex;
   output LE;
   output p;
   
   wire G0;
   wire [3:0] o;
   wire V5;
   
   MUX4T1_4_MUSER_Seg7_Dev  XLXI_1 (.I0(Hexs[3:0]), 
                                   .I1(Hexs[7:4]), 
                                   .I2(Hexs[11:8]), 
                                   .I3(Hexs[15:12]), 
                                   .s(Scan[1:0]), 
                                   .o(Hex[3:0]));
   MUX4T1_4_MUSER_Seg7_Dev  XLXI_2 (.I0({LES[0], point[0], G0, G0}), 
                                   .I1({LES[1], point[1], G0, G0}), 
                                   .I2({LES[2], point[2], G0, G0}), 
                                   .I3({LES[3], point[3], G0, G0}), 
                                   .s(Scan[1:0]), 
                                   .o(o[3:0]));
   MUX4T1_4_MUSER_Seg7_Dev  XLXI_3 (.I0({V5, V5, V5, G0}), 
                                   .I1({V5, V5, G0, V5}), 
                                   .I2({V5, G0, V5, V5}), 
                                   .I3({G0, V5, V5, V5}), 
                                   .s(Scan[1:0]), 
                                   .o(AN[3:0]));
   VCC  XLXI_4 (.P(V5));
   GND  XLXI_5 (.G(G0));
   BUF  XLXI_6 (.I(o[3]), 
               .O(LE));
   BUF  XLXI_7 (.I(o[2]), 
               .O(p));
endmodule
`timescale 1ns / 1ps

module MC14495_ZJU_sch_MUSER_Seg7_Dev(D0, 
                                      D1, 
                                      D2, 
                                      D3, 
                                      LE, 
                                      point, 
                                      a, 
                                      b, 
                                      c, 
                                      d, 
                                      e, 
                                      f, 
                                      g, 
                                      p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire D3_;
   wire XLXN_17;
   wire XLXN_21;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_67;
   wire XLXN_78;
   
   INV  XLXI_1 (.I(D3), 
               .O(D3_));
   INV  XLXI_4 (.I(D0), 
               .O(XLXN_17));
   AND4  XLXI_5 (.I0(D0), 
                .I1(XLXN_21), 
                .I2(XLXN_78), 
                .I3(D3_), 
                .O(XLXN_41));
   AND4  XLXI_6 (.I0(XLXN_17), 
                .I1(XLXN_21), 
                .I2(D2), 
                .I3(D3_), 
                .O(XLXN_42));
   AND4  XLXI_7 (.I0(D0), 
                .I1(D1), 
                .I2(XLXN_78), 
                .I3(D3), 
                .O(XLXN_64));
   AND4  XLXI_8 (.I0(D0), 
                .I1(XLXN_21), 
                .I2(D2), 
                .I3(D3), 
                .O(XLXN_67));
   AND4  XLXI_9 (.I0(D0), 
                .I1(XLXN_21), 
                .I2(D2), 
                .I3(D3_), 
                .O(XLXN_29));
   AND4  XLXI_13 (.I0(XLXN_17), 
                 .I1(D1), 
                 .I2(XLXN_78), 
                 .I3(D3_), 
                 .O(XLXN_37));
   AND4  XLXI_16 (.I0(XLXN_17), 
                 .I1(D1), 
                 .I2(XLXN_78), 
                 .I3(D3), 
                 .O(XLXN_40));
   AND4  XLXI_24 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .I3(D3_), 
                 .O(XLXN_53));
   AND4  XLXI_25 (.I0(XLXN_17), 
                 .I1(XLXN_21), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_54));
   OR4  XLXI_34 (.I0(XLXN_67), 
                .I1(XLXN_64), 
                .I2(XLXN_42), 
                .I3(XLXN_41), 
                .O(XLXN_57));
   OR4  XLXI_35 (.I0(XLXN_32), 
                .I1(XLXN_31), 
                .I2(XLXN_30), 
                .I3(XLXN_29), 
                .O(XLXN_58));
   OR3  XLXI_36 (.I0(XLXN_38), 
                .I1(XLXN_31), 
                .I2(XLXN_37), 
                .O(XLXN_59));
   OR4  XLXI_37 (.I0(XLXN_40), 
                .I1(XLXN_39), 
                .I2(XLXN_42), 
                .I3(XLXN_41), 
                .O(XLXN_60));
   OR3  XLXI_38 (.I0(XLXN_45), 
                .I1(XLXN_44), 
                .I2(XLXN_43), 
                .O(XLXN_61));
   OR3  XLXI_39 (.I0(XLXN_54), 
                .I1(XLXN_53), 
                .I2(XLXN_52), 
                .O(XLXN_63));
   OR4  XLXI_40 (.I0(XLXN_49), 
                .I1(XLXN_48), 
                .I2(XLXN_46), 
                .I3(XLXN_67), 
                .O(XLXN_62));
   OR2  XLXI_41 (.I0(LE), 
                .I1(XLXN_57), 
                .O(a));
   OR2  XLXI_42 (.I0(LE), 
                .I1(XLXN_58), 
                .O(b));
   OR2  XLXI_43 (.I0(LE), 
                .I1(XLXN_59), 
                .O(c));
   OR2  XLXI_44 (.I0(LE), 
                .I1(XLXN_60), 
                .O(d));
   OR2  XLXI_45 (.I0(LE), 
                .I1(XLXN_61), 
                .O(e));
   OR2  XLXI_46 (.I0(LE), 
                .I1(XLXN_62), 
                .O(f));
   OR2  XLXI_47 (.I0(LE), 
                .I1(XLXN_63), 
                .O(g));
   INV  XLXI_49 (.I(point), 
                .O(p));
   AND3  XLXI_50 (.I0(XLXN_17), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_30));
   AND3  XLXI_51 (.I0(XLXN_17), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_31));
   AND3  XLXI_52 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_32));
   AND3  XLXI_53 (.I0(D1), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_38));
   AND3  XLXI_54 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_39));
   AND3  XLXI_55 (.I0(D0), 
                 .I1(XLXN_21), 
                 .I2(XLXN_78), 
                 .O(XLXN_45));
   AND3  XLXI_56 (.I0(XLXN_21), 
                 .I1(D2), 
                 .I2(D3_), 
                 .O(XLXN_44));
   AND2  XLXI_57 (.I0(D0), 
                 .I1(D3_), 
                 .O(XLXN_43));
   AND3  XLXI_58 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3_), 
                 .O(XLXN_49));
   AND3  XLXI_59 (.I0(D1), 
                 .I1(XLXN_78), 
                 .I2(D3_), 
                 .O(XLXN_48));
   AND3  XLXI_60 (.I0(D0), 
                 .I1(XLXN_78), 
                 .I2(D3_), 
                 .O(XLXN_46));
   AND3  XLXI_61 (.I0(XLXN_21), 
                 .I1(XLXN_78), 
                 .I2(D3_), 
                 .O(XLXN_52));
   INV  XLXI_62 (.I(D1), 
                .O(XLXN_21));
   INV  XLXI_64 (.I(D2), 
                .O(XLXN_78));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev(Hexs, 
                LES, 
                point, 
                Scan, 
                AN, 
                SEGMENT);

    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [3:0] Hex;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   
   MC14495_ZJU_sch_MUSER_Seg7_Dev  XLXI_1 (.D0(Hex[0]), 
                                          .D1(Hex[1]), 
                                          .D2(Hex[2]), 
                                          .D3(Hex[3]), 
                                          .LE(XLXN_9), 
                                          .point(XLXN_7), 
                                          .a(SEGMENT[0]), 
                                          .b(SEGMENT[1]), 
                                          .c(SEGMENT[2]), 
                                          .d(SEGMENT[3]), 
                                          .e(SEGMENT[4]), 
                                          .f(SEGMENT[5]), 
                                          .g(SEGMENT[6]), 
                                          .p(SEGMENT[7]));
   ScanSync_MUSER_Seg7_Dev  XLXI_2 (.Hexs(Hexs[15:0]), 
                                   .LES(LES[3:0]), 
                                   .point(point[3:0]), 
                                   .Scan(Scan[1:0]), 
                                   .AN(AN[3:0]), 
                                   .Hex(Hex[3:0]), 
                                   .LE(XLXN_8), 
                                   .p(XLXN_7));
   INV  XLXI_3 (.I(XLXN_8), 
               .O(XLXN_9));
endmodule
